\chapter{Figures}

## Get Started with Images and Figures

In LaTeX there is a subtle difference between graphics enclosed in a figure environment and graphics inserted using the `\includegraphics` command. 

The \textit{figure} environment is a floating environment. The figure will be typeset according to LaTeX's rules and can float on another page. It is the pane of all newcomers to LaTeX. There is no such thing in `html`. Deciding as to how to handle these differences took me a while. In the browser an image gets positioned where it was placed and the positioning is based on CSS rules. This also presents difficulties as to how to handle alignments for multiple images.

\subsection{Positioning}

With the widespread of handheld devices, most images in browsers are displayed center. if you want to dispaly more thatn one image and center it takes a bit more work. To display the image in \ref{centerfigure} is very easy.

\phc[37%]{../beta/che.jpg}{Che \label{centerfigure} and more...  }

Use the code below:


\begin{verbatim}
\phc[37%]{../beta/che.jpg}{Che \label{centerfigure} and more...  }
\end{verbatim}

\phl[37%]{../beta/che.jpg}{Che \label{centerfigure} and more...  }


\section{Margin Figures}

Margin figures are inspired by Tufte. In the browser since we do not have margins we display them as wrapped figures. They require lot's of text around them. If you use them you have to use a class such as Tufte for the print publication. If it is not defined they revert to normal figures in classes such as book.

\begin{marginfigure}
\includegraphics[width=.98\linewidth]{../beta/che.jpg}

\caption{Great photogenic person!}
\end{marginfigure}

In the browser a margin figure takes 37\% of the width of the enclosing block. This is the default in the software, but you can change it by changing the appropriate value in the plugin `config` file. Why 37%? This looks like a balanced approach to my eyes and since a lot of people that will be using this application have a mathematical background, I thought I would please them by giving them the {{wi: golden_ratio}}. 

All divs and the image itself are marked with a CSS class `margin-figure`. You can style them further using the `application.css` file.

A word of warning, when the figures are printed out in a `tufte-class` some adjustments need to be done in the final version. This is normal as they are not really floating-figures. If you want to use floating figures, you maybe better off using normal figures and another class.

\section{Using LaTeX-like Commands}

You can use, LaTeX-like mark-up if you familiar  with TeX. Personally I find it easier and faster than `html` mark-up. All markdown commands are also available but they are limited as it is unlikely that images will render nice without enclosing divs and other paraphernalial. We provide a number of commands to make life easier and these are described later on.

\begin{verbatim}
\begin{figure}
\includegraphics[width=.20\textwidth]{../beta/che.jpg}
\caption{Great photogenic person!}
\end{figure}
\end{verbatim}

\begin{figure}
\includegraphics[width=200px]{../beta/che.jpg}
\caption{Image size is width=200px}
\end{figure}


\subsection{Sizing Units}

You can use any units allowed in browsers and also LaTeX. Currently the most common would be to use `.8\textwidth`, `cm`, `pt`, `px`.

\includegraphics[width=3cm]{../beta/che.jpg}



\phl[30%]{../beta/che.jpg}{second Figure}
\phl[32%]{../beta/che.jpg}{second Figure}
\phl[30%]{../beta/che.jpg}{second Figure}
\clear 




\subsection{Referencing}

Figures acn be referenced using \verb++\ref{..} ++ and they can be labelled using \verb++ \label{..} ++ For example see \ref{che}.





