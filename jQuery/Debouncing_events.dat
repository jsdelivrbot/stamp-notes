 <!--
{{feature: .. Simplicity the art of maximizing the amount of work not done. The Agile Manifesto}}
{{feature-image:http://localhost/CodeIgniter/images/run_time_error.jpg}}
{{keywords: CodeIgniter,PHP, CodeIgniter, File helper class}}
{{author:Dr Y Lazarides}}
{{date:8 September 2008}}
{{category: UI, jQuery, Visibility Filters, CSS Visibility }}
{{snippet:using CodeIgniter's file_helper class}}

-->


<style>
  .ex1 { background:yellow; font-weight:bold; cursor:pointer; 
      padding:5px; }
  .ex2{ background:#bebebe; font-weight:bold; cursor:pointer; 
      padding:5px; }
 .over { background: #ccc; }
.progress{cursor:pointer;width:25px;
font-size:10px;line-height:10px;height:10px;background:green;color:#fff;float:left
}
.legend{width:100px;
height:10px;float:left;font-size:10px;line-height:10px
}
#cbutton{color:blue}
#add{}
#tower{}
#demo1{}
 </style>




<h2 id="firstHeading" class="firstHeading" style="background-color: rgb(239, 239, 239)">
Debouncing Events
</h2>

Can we bind both the double-click as well as the single click event on a selector?I recently had the though to do that on an interface I am busy with (see). Apparently this is termed
{{wi:debouncing}}, which is actually borrowed from electrical engineering terminology.  Besides the fact that I was not aware at first that there is a plugin for this, there was an answer at [stackoverflow](http://stackoverflow.com/questions/1067464/need-to-cancel-click-mouseup-events-when-double-click-event-detected)

Most Construction Managers are mostly interested to find out what percentage of the activity is completed and some prefer to know if is complete or not completed. The problem with desktop planning software is that they are currently the antithesis of simplicity. They have become large and cumbersome and the {{wi:infographics}} are from the sixties. 

We need to know:

- What percentage of the work is done
- How many people are deployed there?
- Why is it late if late
- Is there anything holding it up (perhaps a pre-activity?). Is this activity on the critical path?
- Are all the resources available to complete an activity?
- If we input 'standard ' manhours' and 'constraints', can we create a self-generated program?

{{example:
<div  id="tower" class="clearfix">
<div style="" class="legend">Fire Protection</div>
 <div rel=""  class="progress" >
</div>
<div style="clear:both;height:5px"></div>
<div class="legend">HVAC </div>
 <div rel=""  class="progress" >
</div>

</div>
<p></p>
<label>Add more activities </label><input type="text" value="" id="add" name="add" />

<div id="demo1" style="width:250px;height:250px;border:1px solid #bebebe"></div>
}}
<hr/>

{{plain:

<h4 class="red">Debouncing Click Events</h4>

<code class="js">
function singleClick(e) &#123;
    // do something, "this" will be the DOM element
&#125;

function doubleClick(e) &#123;
    // do something, "this" will be the DOM element
&#125;

$(selector).click(function(e) &#123;
    var that = this;
    setTimeout(function() &#123;
        var dblclick = parseInt($(that).data('double'), 10);
        if (dblclick > 0) {
            $(that).data('double', dblclick-1);
        &#125; else &#123;
            singleClick.call(that, e);
        &#125;
    &#125;, 300);
&#125;).dblclick(function(e) &#123;
    $(this).data('double', 2);
    doubleClick.call(this, e);
&#125;);
</code>
}}

Although there is a whole discussion on this, if it is intuitive for users to do this, I would still like to try it out, as the 'Site Progress', interface I am building has to be extremely fast and user friendly. Construction Site Progress, should be logged in daily and if it is not quick, with all the areas that a large construction is busy with it is unlikely that it will be used effectively. Most Construction works use Primavera for planning and I am sorry to say that I still have not seen a Construction Site that actually implements the programme in full. Normally expensive personnel are employed to keep it up-todate and it takes over a week to update it! By the time it is issued it is already outdated.

I was looking for something more intuitive, easy to learn - so that anyone - authorized can update in a jiffy, perhaps at the end of the shift!

<script type="text/javascript">

function singleClick(e) {
    // do something, "this" will be the DOM element

var $width=$(this).width()+25;
var $legend=$(this).attr('rel')+' '+$(this).width()+'%';
  //if ($width>100){$width=100}
  //var  $w=$this.width+10;
 //   $w1=$w+'px';
 //alert('ok  single click'+$width);
    $(this).css('width',$width)
                 .fadeTo('slow',0.3)
                 .fadeTo('slow',1.0);
    $(this).text($width/5);
}

function doubleClick(e) {
   var $width=$(this).width()-25;
  var $legend=$(this).attr('rel')+' '+$width+'%';
//  if ($width<0){$width=10}
  //var  $w=$this.width+10;
 //   $w1=$w+'px';
  // alert('ok  double click'+$width);
    $(this).css('width',$width); 
    $(this).text(($width/5));
  return $width;
}

$('.progress').click(function(e) {
    var that = this;
    setTimeout(function() {
        var dblclick = parseInt($(that).data('double'), 10);
        if (dblclick > 0) {
            $(that).data('double', dblclick-1);
        } else {
            singleClick.call(that, e);
        }
    }, 200);
}).dblclick(function(e) {
    $(this).data('double', 2);
    doubleClick.call(this, e);
});

$('#add').blur(function(){
$text=$('#add').val();
var s1='<div style="clear:both;height:2px"></div>';
var s2='<div class="legend"></div>';
var s3=' <div rel=""  class="progress"></div>';
  $('#tower').append(s1+s2+s3);
  $('.legend:last').text($text);
});
 </script>

<script type="text/javascript">
function drawdemo()
{
  var canvas = document.getElementById('demo1');
alert('in canvas');
  if (!canvas.getContext) return;
  var ctx = canvas.getContext('2d');
 alert('in canvas context');
  // this adds the text functions to the ctx
  CanvasTextFunctions.enable(ctx);

  ctx.clearRect(0,0,canvas.width,canvas.height);
  ctx.fillStyle = "rgba(200,200,255,0.66)";
  ctx.fillRect(0,0,canvas.width,canvas.height);

  var font = "sans";
  var fontsize = 16;
  var y = ctx.fontAscent(font,fontsize);
  ctx.strokeStyle = "rgba(0,0,0,0.75)";
  ctx.drawTextCenter( font, fontsize, canvas.width/2, y,
  "Canvas Text Functions");
  
   y += ctx.fontDescent(font,fontsize);
   for ( fontsize = 16; fontsize > 2; fontsize -= 2) {
     y += ctx.fontAscent(font,fontsize);
     ctx.drawText( font, fontsize, 2, y, ""+fontsize+"pt");
     ctx.drawTextRight( font, fontsize-1, canvas.width-2, y, ""+(fontsize-1)+"pt");
     y += ctx.fontDescent(font,fontsize);
   }     

   fontsize = 8;
   var sag = ctx.fontAscent(font,fontsize)/2;

   for ( var ang = 0; ang < 360; ang += 30) {
     ctx.save();
     ctx.strokeStyle = "rgba("+Math.floor(ang/360*128)+","+Math.floor((360-ang)/360*128)+",0,0.8)";
     ctx.translate( canvas.width/2, canvas.height/2);
     ctx.rotate(ang*2*3.1416/360);
     ctx.drawText( font, fontsize, 15, sag, ""+ang);
     ctx.restore();
   }
}
drawdemo();
</script>




