 <!--
{{feature: .. Simplicity the art of maximizing the amount of work not done. The Agile Manifesto}}
{{feature-image: http://localhost/egypt/elliott-erwitt/EE-1150.jpg}}
{{keywords: CodeIgniter,PHP, CodeIgniter, File helper class}}
{{author:Dr Y Lazarides}}
{{date:8 September 2008}}
{{category: PHP, MVC, Parsers}}
{{snippet:using CodeIgniter's file_helper class}}

-->
<h3>String fromCharCode()  method</h3>

Returns a string value containing as many characters as the number of arguments. Each argument
specifies one character of the resulting string, with the first argument specifying the first character,
and so on, from left to right.

<div  class="code-block console-wrap"><div class="code code-block">
<code>
     s.fromCharCode(65,66,67,68);
log('string from char codes', s );
</code>

</div>

<div  class="msg" class="msg" style="white-space:pre;font-family:monospace;line-height:1.3">
</div>
<div class="console"></div>
<button class="eval">Run Code!</button>
<ol class="results"></ol> 
</div>

ECMA specifies that the charAt() function is intentionally generic; it does not require that its this value be a String
object. Therefore it can be transferred to other kinds of objects for use as a method, as for example calling String.prototype.concat

<div  class="code-block console-wrap"><div class="code code-block">
<code>
var s = 'abcd';
var chrCode = s.charAt(0);
log('Char at position pos', chrCode);
var text = {
  name: 'text'
};
text.charAt = function (pos) {
  return String.prototype.charAt.call(this.name, pos);
};

log(text.charAt(0));
</code>

</div>
<div  class="msg" class="msg" style="white-space:pre;font-family:monospace;line-height:1.3">
</div>
<div class="console"></div>
<button class="eval">Run Code!</button>
<ol class="results"></ol> 
</div>


##Further Reading



 



  
  







