
## Object prototypes

\begin{codeblock}
// Rectangle is an ordinary function.
var Rectangle = function() {};
// Every function has a property named 'prototype' whose value is an object
// with a property named 'constructor' that points back to the original
// function. It is possible to add more properties to this object.
Rectangle.prototype.width = 3;
Rectangle.prototype.height = 4;
// Creates an instance of a Rectangle, which is an object whose
// __proto__ property points to Rectangle.prototype. 
var rect = new Rectangle();
\end{codeblock}


<h2>Another Method</h2>

\begin{codeblock}
var myNamespace = {};
  myNamespace.foo = function() {
      var privateFoo = 1;
      this.publicBar = "test";
      
      var privateFn = function() {return 10};
      this.publicFn = function() {return 11};
     // return this;
  }

  // usage
  myFoo = new myNamespace.foo();
  log('i',myFoo.publicFn().publicBar);
\end{codeblock}

##Further Reading



 



  
  







    