 <!--
{{feature: .. Simplicity the art of maximizing the amount of work not done. The Agile Manifesto}}

{{keywords: CodeIgniter,PHP, CodeIgniter, File helper class}}
{{author:Dr Y Lazarides}}
{{date:8 September 2008}}
{{category: PHP, MVC, Parsers}}
{{snippet:using CodeIgniter's file_helper class}}

-->


<h2>How to check if an element exists with jQuery</h2>

We can easily check if an element exists with jQuery, by using the <strong>length</strong> property or by checking if the selector evaluates to <strong>true</strong>.
<div  class="code-block console-wrap  ui-corner-all">
<div class="code-block code">
<code id="editable">
var z =$('#aTest').length;
 log('z', z);
</code>
</div>

<div  id ="msg" class="msg">
</div>
<div class="console"></div>
<button id="eval" class="eval ui-corner-all">Run Code!</button>
<button id="edit" class="ui-corner-all">edit</button>
<button id="done" class="ui-corner-all">Done</button>
<ol class="results"></ol> 
</div>
<hr />

<h3>Accidental Assignment</h3>
A very common error (not just in JavaScript, but also in other languages is the
accidental use of the assignment operator (=) in a comparison statement. The code below will return false and <strong>assign</strong> the value zero to the variable <strong>f</strong>.

{{plain:
   if (f=0) alert(f);
}}





##Further Reading

http://ajaxian.com/archives/javascript-associative-arrays-considered-harmful

http://andrewdupont.net/2006/05/18/javascript-associative-arrays-considered-harmful/



