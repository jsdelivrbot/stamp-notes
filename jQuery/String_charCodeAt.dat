 <!--
{{feature: .. Simplicity the art of maximizing the amount of work not done. The Agile Manifesto}}
{{feature-image: http://localhost/egypt/elliott-erwitt/EE-1150.jpg}}
{{keywords: CodeIgniter,PHP, CodeIgniter, File helper class}}
{{author:Dr Y Lazarides}}
{{date:8 September 2008}}
{{category: PHP, MVC, Parsers}}
{{snippet:using CodeIgniter's file_helper class}}

-->
<h3>String charCodeAt()  method</h3>

Returns a number (a nonnegative integer less than 216) representing the code point value of the
character at position pos in the string resulting from converting this object to a string. If there is no
character at that position, the result is NaN.

<div  class="code-block console-wrap"><div class="code code-block">
<code>
var s='abcd';
var chrCode = s.charCodeAt(2);
log('Char at position pos', chrCode);
</code>

</div>

<div  id="msg" class="msg" style="white-space:pre;font-family:monospace;line-height:1.3">
</div>
<div class="console"></div>
<button class="eval">Run Code!</button>
<ol class="results"></ol> 
</div>

ECMA specifies that the charCodeAt() function is intentionally generic; it does not require that its this value be a String
object. Therefore it can be transferred to other kinds of objects for use as a method, as for example calling String.prototype.concat

<div  class="code-block console-wrap"><div class="code code-block">
<code>
var s = 'abcd';
var chrCode = s.charCodeAt(0);
log('Char at position pos', chrCode);
var text = {
  name: 'text'
};
text.charCodeAt = function (pos) {
  return String.prototype.charCodeAt.call(this.name, pos);
};

log(text.charCodeAt(0));
</code>

</div>
<div  class="msg" class="msg" style="white-space:pre;font-family:monospace;line-height:1.3">
</div>
<div class="console"></div>
<button class="eval">Run Code!</button>
<ol class="results"></ol> 
</div>


##Further Reading



 



  
  







