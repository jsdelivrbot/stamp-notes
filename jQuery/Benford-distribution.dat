##Benford Distribution

 From the study of leading digits in data
sets. It turns out that many data sets that occur \textit{in real life} have the property that
the first digits of the data are not uniformly distributed over the set {1, 2, . . . , 9}.
Rather, it appears that the digit 1 is most likely to occur, and that the distribution
is monotonically decreasing on the set of possible digits. The Benford distribution
appears, in many cases, to t such data. Many explanations have been given for the
occurrence of this distribution. Possibly the most convincing explanation is that
this distribution is the only one that is invariant under a change of scale.  


\begin{teXXX}

\def\Removeelement123{%
  \def\reserved@a##1,#1,##2\reserved@a{##1,##2\reserved@b}%
  \def\reserved@b##1,\reserved@b##2\reserved@b{%
  \ifx,##1\@empty\else##1\fi}%
  \edef#3{%
  \expandafter\reserved@b\reserved@a,#2,\reserved@b,#1,\reserved@a}}

\end{teXXX}


\end{document}




\begin{jscodeblock}
var digits = [0,0,0,0,0,0,0,0,0,0];
function random(x) {
  return Math.floor(Math.random()*x);
}

for(var j=0;j<10000;j++){
x= random(1000000000);
var X= new String(x);
//get first digit
 var firstdigit= parseInt(X[0],10);
 //log(firstdigit);
 digits[firstdigit]++; 
} 
log(digits);
\end{jscodeblock}



If one
thinks of certain data sets as somehow _naturally occurring_, then the distribution
should be unaffected by which units are chosen in which to represent the data, i.e.,
the distribution should be invariant under change of scale.

First we wil consider numbers generated with a random generator. In the example below, we generate 1,000,000,000 random numbers and we then count the distribution of the first digit. As we expect this produces an event chance for any of the digits to appear.


Let us now examine some real data and since I am involved with high rise buildings I got the [list of tallest buildings](http://en.wikipedia.org/wiki/List_of_tallest_buildings_and_structures_in_the_world#Tallest_structure_by_category). This data set as you can observe approaches the Benford distribution. It is very evident when one considers the first digit.
      
\begin{jscodeblock}
var data = [827,628.8,601,634,462,458,452,419.7,400,385,
                366.8,354,346.5,342,300,285,257,
                229,210,205,200,192,178.3,175,173.7,
                167,165,162,160,158,152.4,138.8,132.2,128,
                120,120,118,113.6,111,106,85,77,72.5,55];
var digits = [0,0,0,0,0,0,0,0,0,0];
function random(x) {
  return Math.floor(Math.random()*x);
}

for(var j=0;j< data.length;j++){
x= data[j];
var X= new String(x);
//get first digit
 var firstdigit= parseInt(X[0],10);
 //log(firstdigit);
 digits[firstdigit]++; 
} 
log(digits);
\end{jscodeblock}

If you struggling like me to decide if this is some sort of hidden nature law or there is a mathematical explanation read [Fewster's](http://www.stat.auckland.ac.nz/~fewster/RFewster_Benford.pdf)  paper and then google for the original Benford paper.  

Tremendous benefits can accrue, if TeX-like mark-up could be used in lieu of html and its variants, while a requirement exists to have a document both as  (All)TeX mark-up and html format.  

There are benefits both ways. For (All)TeX a  browser interface is unquestionably the best means of providing a flexible and user friendly User Interface and requiring minimal programming. One could program settings to be captured via interactive screens to manage packages and variable settings. On last count a complicated document might need over 700 variable settings, and although most of us solve the problem with class selection the difficulties remain. Another benefit is the organization of the document data and managing files and directories through a visual interface, rather than a console and lastly and perhaps one of the most important consideration is the possibility of using server and scripting languages for calculations and  access to web documents and databases, where (All)TeX is limited. 

For html a macro language could be used to generate complicated html patterns such as code-blocks, complicated visual displays of images (that require a lot of divs) and similar.  Additionally, if the mark-up was in (All)TeX, documents could be generated on the fly.

Here is the question, before I give a bit more background.

What are your views? Is TeX-like mark-up a good way of structuring documents?I personally think the answer is yes with the exception of tables. What would be a suitable mark-up for tables? 












                                               