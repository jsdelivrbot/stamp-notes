      
<!--
 directives
{{feature: .. Simplicity the art of maximizing the amount of work not done. The Agile Manifesto}}

{{feature-image:/codeigniter/images/china/beauty_07.jpg}}
{{keywords: CodeIgniter,PHP, CodeIgniter, File helper class}}
{{author:Dr Y Lazarides}}
{{date:8 September 2008}}
{{category: PHP, MVC, Parsers}}
{{snippet:using CodeIgniter's file_helper class}}

-->

<script type="text/javascript"> 
 goog.require('goog.array');
    goog.require('goog.debug.DivConsole');
    goog.require('goog.debug.LogManager');
    goog.require('goog.debug.Logger');
    goog.require('goog.events');
    goog.require('goog.object');
    goog.require('goog.ui.Control');
    goog.require('goog.ui.ControlRenderer');
    goog.require('goog.ui.decorate');
    goog.require('goog.ui.registry');
</script>
<STYLE> 
    /* Demo styles for goog.ui.Control. */
    .goog-control {
      position: relative;
      width: 20ex;
      margin: 2px;
      border: 2px solid #036;
      padding: 2px;
      font: normal 9pt "Trebuchet MS", Tahoma, Arial, sans-serif;
      color: #036;
      background-color:#69c;
      cursor: pointer;
      outline: none;
      -moz-outline: none;
    }
 
    .goog-control-disabled {
      border-color: #888;
      color: #888;
      background-color: #ccc;
    }
 
    .goog-control-hover {
      border-color: #369;
      color: #369;
      background-color: #9cf;
    }
 
    .goog-control-active,
    .goog-control-selected,
    .goog-control-checked {
      border-color: #9cf;
      color: #9cf;
      background-color: #369;
    }
 
    .goog-control-focused {
      border-color: orange;
    }
 
    /* Custom control styles. */
    .goog-custom-control {
      position: relative;
      width: 25ex;
      margin: 4px 0;
      border: 2px solid #eee;
      padding: 0;
      cursor: pointer;
      vertical-align: middle;
      outline: none;
      -moz-outline: none;
    }
 
    .goog-custom-control-outer-box {
      position: relative;
      margin: 0;
      border: 2px solid #ddd;
      padding: 0;
      vertical-align: middle;
    }
 
    .goog-custom-control-inner-box {
      position: relative;
      margin: 0;
      border: 2px solid #ccc;
      padding: 0;
      vertical-align: middle;
    }
 
    .goog-custom-control-content {
      position: relative;
      margin: 0;
      border: 2px solid #bbb;
      padding: 4px;
      font-family: Georgia, Times, serif;
      color: #ddd;
      background-color: #aaa;
    }
 
    .goog-custom-control-hover {
      border-color: #eef;
    }
 
    .goog-custom-control-hover .goog-custom-control-outer-box {
      border-color: #ddf;
    }
 
    .goog-custom-control-hover .goog-custom-control-inner-box {
      border-color: #ccf;
    }
 
    .goog-custom-control-hover .goog-custom-control-content {
      border-color: #bbf;
      background-color: #aaf;
    }
 
    .goog-custom-control-active .goog-custom-control-content {
      color: #fff;
    }
 
    .goog-custom-control-focused {
      border-style: dashed;
      border-color: orange;
    }
 
    /* "Insert" button styles. */
    .goog-edit-insert-icon {
      height: 16px;
      width: 16px;
      margin: 0;
      border: 0;
      padding: 0;
      background: url(images/toolbar_icons.gif) no-repeat -80px;
      vertical-align: middle;
    }
 
    .goog-edit-insert-caption {
      margin: 0;
      border: 0;
      padding: 0 2px;
      vertical-align: middle;
      font-weight: bold;
    }
 
    /* Extra CSS styles. */
    .extra-red {
      border: 1px solid red;
      background-color: #fcc;
    }
 
    .extra-blue {
      border: 1px solid blue;
      background-color: #ccf;
    }
 
    .extra-thick-border {
      border-width: 4px;
    }
</STYLE>
 
<h2>Closure Controls</h2>

Base class for UI controls such as buttons, menus, menu items,
toolbar buttons, etc.  The implementation is based on a generalized version
@link goog.ui.MenuItem.

{{bulb: The file carries a note that if the renderer framework works well, pull it into Component. Since the file is dated 2007, I guess you should not over worry, if you are going to use it.}}


<div  class="code-block console-wrap">
<div class="code-block code">
<code>
var timer = goog.now();

// Set up a logger.
goog.debug.LogManager.getRoot().setLevel(goog.debug.Logger.Level.ALL);
var logger = goog.debug.Logger.getLogger('demo');
var logconsole = new goog.debug.DivConsole(goog.dom.$('log'));
logconsole.setCapturing(true);

var EVENTS = goog.object.getValues(goog.ui.Component.EventType);
logger.fine('Listening for: ' + EVENTS.join(', ') + '.');

function logEvent(e) {
  logger.info('"' + e.target.getCaption() + '" dispatched: ' + e.type);
}

// Create the first control programmatically, and make it focusable.
var c1 = new goog.ui.Control(
goog.dom.createDom('span', null, 'Hello, ', goog.dom.createDom('b', null, 'world'), '!'));
c1.render(goog.dom.$('c1'));

goog.events.listen(c1, EVENTS, logEvent);
goog.dom.setTextContent(goog.dom.$('perf'), (goog.now() - timer) + 'ms');

</code>
</div>

<div class="sandbox-console"> 
<legend>This control was created programmatically:&nbsp;</legend> 

<div id="c1">

</div> 

   This control dispatches ENTER, LEAVE, and ACTION events on
   mouseover, mouseout, and mouseup, respectively.  It supports
  keyboard focus.
 
<div id="perf"></div>
</div> 
<div  id ="msg" class="msg">
</div>

Event Log
<div id="log" class=" logdiv" style="height:100px;overflow:scroll;width:95%;">
</div>
    
<div class="console" style="white-space:pre"></div>
<button class="eval">Run Code!</button>
<ol class="results"></ol> 
</div>


       


<h3>Creating and Rendering the Control</h3>
To create the control we use the goog.ui.Control constructor. To render it 
we use the __render__ method. We can also use a renderer, but we will look at that in Part II of this article.
<div class="code-block console-wrap">
<div class="code-block code">
var c1 = new goog.ui.Control(
goog.dom.createDom('span', null, 'Hello, ', goog.dom.createDom('b', null, 'world'), '!'));
c1.render(goog.dom.$('c1'));
</div>
</div>

<h3>Performance</h3>

If you have a look at the little performance indicator in the sandbox it takes over 35 ms to render one control in Chrome or FireFox and over 240ms in Opera. Rendering Controls this way is quite an expensive operation, although the logging operation itself can cause delays.















<span id="chapter" class="hidden">11</span>
##Further Reading


              