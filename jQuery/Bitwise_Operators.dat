
<h2>Bitwise Operators</h2>


\begin{codeblock}
var z1=100.toString(2);

log(z1);
\end{codeblock}



<h3>Adding time to randomize further</h3>

\begin{codeblock}

function getRandomString() {
  return Math.floor(Math.random() * 3147483648).toString(36) 
         + (Math.floor(Math.random() * 9147483648) ^ (new Date).getTime()).toString(36);
};

var z = getRandomString();

log(getRandomString());

\end{codeblock}


Now our example before the last:

<div  class="code-block console-wrap">
<div class="code-block code">
<code>

</code>
</div>

<div  id ="msg" class="msg">
</div>
<div class="console"></div>
<button class="eval">Run Code!</button>
<ol class="results"></ol> 
</div>

One interesting aspect of the above algorithm is the use of the bitwise operator XOR (^), in order to scrable the strings further.









<span id="chapter" class="hidden">11</span>
##Further Reading



 



  
  







