 <!--
{{feature: .. Simplicity the art of maximizing the amount of work not done. The Agile Manifesto}}

{{keywords: CodeIgniter,PHP, CodeIgniter, File helper class}}
{{author:Dr Y Lazarides}}
{{date:8 September 2008}}
{{category: PHP, MVC, Parsers}}
{{snippet:using CodeIgniter's file_helper class}}

-->
<style type="text/css">
.min-height{min-height:100px;background:#fff}


</style>


<h2>Unicode and JavaScript</h2>
<h3>String Literals</h3>

<div  class="code-block">
<div class="code code-block">
<code>
var s = "I am a string"
log( "value of s: ", s.length );
</code>
</div>
<p id="msg1" class="msg" style="width:400px;font-size:24px;font-weight:bold;background:#fff;min-height:100px">
</p>
<button class="eval">Run Code!</button>
<ol class="results" >

</ol> 
</div>
</code>

<strong>Omitting semicolons is not a good programming practice. Consider the following code</strong>

<hr/>
<div  class="code-block">
<div class="code code-block">
<code>
function a(){
  return
  true;
}

function b(){
  return true;
}
alert (a());
alert(b());
</code>
</div>
<p id="msg1" class="msg" style="width:400px;font-size:24px;font-weight:bold;background:#fff">
</p>
<button class="eval">Run Code!</button>
<ol class="results" style="margin-top:8px"></ol> 
</div>
</code>

<h2>Literals</h2>
A <strong>literal</strong> is a data value that appears directly in a program. The following are all literals:

{{plain:
- 12
- 1.2
- "hello world"
- 'Hi Scotty'
-  true
- false
- /javascript/gi 
-  null
}}

In ECMAScript, expressions that serve as array and object literals are also
supported. For example:

{{plain:
[2,3,6,7,89]          // An array initializer
&#123; x:1, y:2 &#125;     
}}

Literals are an important part of any programming language, since it is impossible to describe a program without them.


<h2>Identifiers</h2>
An identifier is simply a name. The first letter can be an underscore (_), or a dollar sign ($). Subsequent characters maybe any letter or digit or an underscore or dollar sign. Numbers are not allowed as a first character.

From ECMAScript v3, identifiers can contain letters and digits from the complete Unicode character set. It also allows Unicode escape characters
to appear in identifiers. A Unicode escape is the character \u followed by 4 hexadecimal digits that specify a 16-bit character encoding. For example the identifier &#pi; could be written as \u03c0. 
<div  class="code-block"><div class="code code-block"><code>
<span class="green">// Javascript allows identifiers to be any valid Unicode character</span>
function a(){
 var \u03c0=3.1413;     
  return      &nbsp;  \u03c0;   ;
 }
log ('PI : ',a());
</code>
</div>
<p id="msg1" class="msg" style="width:400px;font-size:24px;font-weight:bold;background:#fff">
</p>
<button class="eval">Run Code!</button>
<ol class="results" style="margin-top:8px"></ol> 
</div>

Since a function name is simply a variable name, this can also be written with any valid Unicode character.
<div  class="code-block"><div class="code code-block"><code>
<span class="green">// Javascript allows identifiers to be any valid Unicode character</span>
function \u03c0(){
 var pi=3.1413;     <span class="green">//  pi in hex</span>
 var &Theta;=21+pi;   
 return  &Theta;
 }
alert (\u03c0());
</code>
</div>
<p id="msg1" class="msg" style="width:400px;font-size:24px;font-weight:bold;background:#fff">
</p>
<button class="eval">Run Code!</button>
<ol class="results"></ol> 
</div>


##Further Reading





  
  







