 <!--
{{feature: .. Simplicity the art of maximizing the amount of work not done. The Agile Manifesto}}

{{keywords: CodeIgniter,PHP, CodeIgniter, File helper class}}
{{author:Dr Y Lazarides}}
{{date:8 September 2008}}
{{category: PHP, MVC, Parsers}}
{{snippet:using CodeIgniter's file_helper class}}

-->
<script language="javascript" type="text/javascript" src="http://localhost/codeigniter/js/flot/jquery.flot.js"></script>





<h2>The Flot Library</h2>

The Flot library is a somewhat limited library with support for: lines, points, filled areas, bars and combinations of these. Its limitations are actually its strength in that it is really simple to install and learn. From download to running your first sample will take a couple of minutes.

From an interaction perspective, Flot by far will get you as close as possible to Flash graphing as you can get with jQuery. 

Whilst the graph output is pretty slick, and great looking, you can also interact with data points. What I mean by this is you can have the ability to hover over a data point and get visual feedback on the value of that point in the graph.

On top of this, you also have the ability to select a chunk of the graph to get data back for a particular zone. As a secondary feature to this zoning, you can also select an area on a graph and zoom in to see the data points a little more closely. .
The library was developed by  Ole Laursens a Danish Web Developer
http://people.iola.dk/olau/, the code can be downloaded from 
<a href="http://code.google.com/p/flot/">flot </a>.

 

<p>Simple example. You don't need to specify much to get an
attractive look. Put in a placeholder, make sure you set its
dimensions (otherwise the plot library will barf) and call the
       plot function with the data. The axes are automatically
scaled.
</p>

<div style="background:url(http://localhost/codeigniter/images/code-bg.gif)">
<div id="placeholder" style="width:300px;height:300px;"></div>
<script id="source" language="javascript" type="text/javascript">
$(function () {
    var d1 = [];
    var d4 = [];
    for (var i = 0; i < 14; i += 0.5)
        d1.push([i, Math.sin(i)]);

    for (var j = 0; j < 14; j += 0.5)
        d4.push([j, 3*Math.cos(j)]);

    var d2 = [[0, 3], [4, 8], [8, 5], [9, 13]];

    // a null signifies separate line segments
    var d3 = [[0, 12], [7, 12], null, [7, 2.5], [12, 2.5]];

    var options = {
    series: {
      lines: { show: true },
      points: { show: true,
                        radius : 2 }
    }
  };
    $.plot($("#placeholder"), [ d1, d4, d2, d3], options);
});
</script>

    <div id="placeholder1" style="width:600px;height:300px"></div>

    <p>Flot supports lines, points, filled areas, bars and any
    combinations of these, in the same plot and even on the same data
    series.</p>

<script id="source" language="javascript" type="text/javascript">
$(function () {
    var d1 = [];
    for (var i = 0; i < 14; i += 0.5)
        d1.push([i, Math.sin(i)]);

    var d2 = [[0, 3], [4, 8], [8, 5], [9, 13]];

    var d3 = [];
    for (var i = 0; i < 14; i += 0.5)
        d3.push([i, Math.cos(i)]);

    var d4 = [];
    for (var i = 0; i < 14; i += 0.1)
        d4.push([i, Math.sqrt(i * 10)]);
    
    var d5 = [];
    for (var i = 0; i < 14; i += 0.5)
        d5.push([i, Math.sqrt(i)]);
    
    $.plot($("#placeholder1"), [
        {
            data: d1,
            lines: { show: true, fill: true }
        },
        {
            data: d2,
            bars: { show: true }
        },
        {
            data: d3,
            points: { show: true }
        },
        {
            data: d4,
            lines: { show: true }
        },
        {
            data: d5,
           //lines: { show: true },
            points: { show: true }
        }
    ]);
});
</script>



  <p>Here is an example with real data: military budgets for
        various countries in constant (2005) million US dollars (source: <a href="http://www.sipri.org/">SIPRI</a>).</p>

    <p>Since all data is available client-side, it's pretty easy to
       make the plot interactive. Try turning countries on/off with the
       checkboxes below.</p>


<div  class="code-block"><div class="code code-block"><code><span class="hidden"> log( "Click #", 'button' ); </span>
<span class="green">//
//  Check for browser support
// </span>
$(function () {
    var datasets = {
        "usa": {
            label: "USA",
            data: [[1988, 483994], [1989, 479060], [1990, 457648], [1991, 401949], [1992, 424705], [1993, 402375], [1994, 377867], [1995, 357382], [1996, 337946], [1997, 336185], [1998, 328611], [1999, 329421], [2000, 342172], [2001, 344932], [2002, 387303], [2003, 440813], [2004, 480451], [2005, 504638], [2006, 528692]]
        },        
        "russia": {
            label: "Russia",
            data: [[1988, 218000], [1989, 203000], [1990, 171000], [1992, 42500], [1993, 37600], [1994, 36600], [1995, 21700], [1996, 19200], [1997, 21300], [1998, 13600], [1999, 14000], [2000, 19100], [2001, 21300], [2002, 23600], [2003, 25100], [2004, 26100], [2005, 31100], [2006, 34700]]
        },
        "uk": {
            label: "UK",
            data: [[1988, 62982], [1989, 62027], [1990, 60696], [1991, 62348], [1992, 58560], [1993, 56393], [1994, 54579], [1995, 50818], [1996, 50554], [1997, 48276], [1998, 47691], [1999, 47529], [2000, 47778], [2001, 48760], [2002, 50949], [2003, 57452], [2004, 60234], [2005, 60076], [2006, 59213]]
        },
        "germany": {
            label: "Germany",
            data: [[1988, 55627], [1989, 55475], [1990, 58464], [1991, 55134], [1992, 52436], [1993, 47139], [1994, 43962], [1995, 43238], [1996, 42395], [1997, 40854], [1998, 40993], [1999, 41822], [2000, 41147], [2001, 40474], [2002, 40604], [2003, 40044], [2004, 38816], [2005, 38060], [2006, 36984]]
        },
        "denmark": {
            label: "Denmark",
            data: [[1988, 3813], [1989, 3719], [1990, 3722], [1991, 3789], [1992, 3720], [1993, 3730], [1994, 3636], [1995, 3598], [1996, 3610], [1997, 3655], [1998, 3695], [1999, 3673], [2000, 3553], [2001, 3774], [2002, 3728], [2003, 3618], [2004, 3638], [2005, 3467], [2006, 3770]]
        },
        "sweden": {
            label: "Sweden",
            data: [[1988, 6402], [1989, 6474], [1990, 6605], [1991, 6209], [1992, 6035], [1993, 6020], [1994, 6000], [1995, 6018], [1996, 3958], [1997, 5780], [1998, 5954], [1999, 6178], [2000, 6411], [2001, 5993], [2002, 5833], [2003, 5791], [2004, 5450], [2005, 5521], [2006, 5271]]
        },
        "norway": {
            label: "Norway",
            data: [[1988, 4382], [1989, 4498], [1990, 4535], [1991, 4398], [1992, 4766], [1993, 4441], [1994, 4670], [1995, 4217], [1996, 4275], [1997, 4203], [1998, 4482], [1999, 4506], [2000, 4358], [2001, 4385], [2002, 5269], [2003, 5066], [2004, 5194], [2005, 4887], [2006, 4891]]
        }
    };

    // hard-code color indices to prevent them from shifting as
    // countries are turned on/off
    var i = 0;
    $.each(datasets, function(key, val) {
        val.color = i;
        ++i;
    });
    
    // insert checkboxes 
    var choiceContainer = $("#choices");
    $.each(datasets, function(key, val) {
        choiceContainer.append('<br/><input type="checkbox" name="' + key +
                               '" checked="checked" >' + val.label + '</input>');
    });
    choiceContainer.find("input").click(plotAccordingToChoices);

    
    function plotAccordingToChoices() {
        var data = [];

        choiceContainer.find("input:checked").each(function () {
            var key = $(this).attr("name");
            if (key && datasets[key])
                data.push(datasets[key]);
        });

        if (data.length > 0)
            $.plot($("#placeholder3"), data, {
                yaxis: { min: 0 },
                xaxis: { tickDecimals: 0 }
            });
    }

    plotAccordingToChoices();
});




</div>
<p id="msg1" style="width:400px;font-size:24px;font-weight:bold;background:#fff">
</p>

<button class="eval">Run Code!</button>
   <p id="choices">Show:</p>
<div id="placeholder3" style="width:600px;height:300px;"></div>
<ol class="results"></ol> 
</div>
</div>
<hr/>

##Further Reading

http://home.att.net/~srschmitt/script_number_bases.html


<script type="text/javascript">




$(document).ready(function(){
    

  $('button.eval').click(function(){
   var code=$(this).siblings('.code').text();
    
   $that=$(this);
    //clear logger before output
   $that.siblings(".results").text('');
   eval(code);
 
  function assert(pass, msg){
     var type = pass ? "PASS" : "FAIL";
     var result='<li class=" ' + type + ' "><b>' + type + "</b> " 
         + msg + "</li>";
     $that.siblings(".results").append(result).fadeTo('fast','0.35').fadeTo('fast','1.0');
     return result;
   }
 function log(){
  var msg = "";
   
  for ( var i = 0; i < arguments.length; i++ ) {
    msg += " " + arguments[i];
  }
 
  $that.siblings(".results").append("<li class='LOG'><b>LOG</b> " + msg + "</li>").fadeTo('slow','1.0');;
}

$('#compute').click(function(){
  alert('compute button clicked');
  compute();
}); 

//end on document ready

 
});



$(".input").keyup(function(){
    var pattern=$(this).siblings('.regex').val(); 
    var str=$(this).val();
     s=isValid(str,pattern);
    //alert(str);
     $(this).siblings('.msg').text(s);
});

$(".regex").keyup(function(){
    var str=$(this).siblings('.input').val();
    var pattern=$(this).val();
     s=isValid(str,pattern);
     $(this).siblings('.msg').text(s);
    // alert(pattern);
});



function error(msg){
  $(this).siblings("#results").append("<li class='error'><b>ERROR</b> " + msg + "</li>");
}



});

function isValid(str,pattern){
    s=pattern;//alert(s);
   var dateformat =new RegExp(pattern,'msi');
    //alert(dateformat);
   return dateformat.test(str);
}

//change to pass regex
//must do to make more general solution


 </script>



  
  







    