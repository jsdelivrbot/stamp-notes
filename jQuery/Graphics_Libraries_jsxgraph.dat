 <!--
{{feature: .. Simplicity the art of maximizing the amount of work not done. The Agile Manifesto}}

{{keywords: CodeIgniter,PHP, CodeIgniter, File helper class}}
{{author:Dr Y Lazarides}}
{{date:8 September 2008}}
{{category: PHP, MVC, Parsers}}
{{snippet:using CodeIgniter's file_helper class}}

-->

<link rel="stylesheet" type="text/css" href="http://jsxgraph.uni-bayreuth.de/distrib/jsxgraph.css" />
 
<script type="text/javascript" src="http://jsxgraph.uni-bayreuth.de/distrib/jsxgraphcore.js"></script>



<h2>Exploring JavaScript Graphics Libraries</h2>

<p>JSXGraph is simply one of the best graphics libraries available to Javascript developers. It is really a lightweight cross-browser library for interactive geometry, function plotting, graphs, and data visualization in a web browser. It is implemented totally in JavaScript and uses SVG and VML. No plug-ins are required! JSXGraph uses the JavaScript libraries/frameworks Prototype or jQuery. 
You can find examples at the wiki pages, see for example the power series for the <a href="http://jsxgraph.uni-bayreuth.de/wiki/index.php/Power_series_for_the_exponential_function">
exponential function </a>
</p>

<p>Unfortunately there is a considerable learning curve to be overcome in order to use it to its full extend. However, if you are into maths or engineering this is for you.</p>
<div  class="code-block console-wrap">
<div id="jsxgbox" class="jxgbox" style="width:350px; height:350px;"></div>
<div class="code">
<code>	
say('start graph');	
 board = JXG.JSXGraph.initBoard('jsxgbox', {originX: 175,                                                           
                       originY: 175, unitX: 50, unitY: 50});
 g1 = board.createElement('point', [1, -1], {style:6});
 g2 = board.createElement('point', [2.5, -2], {style:6});
 g3 = board.createElement('point', [1, -3], {style:5});
 g4 = board.createElement('point', [2.5, -4], {style:5});
 g5 = board.createElement('point', [-4, 1], {style:5,name:''});
 c1 = board.createElement('curve', [
       function(t){ return (g1.X()-g2.X())*Math.cos(t)+
                                  g3.X()*Math.cos(t*(g1.X()-g2.X())/g2.X()); },
       function(t){ return (g1.X()-g2.X())*Math.sin(t)+
                                 g3.X()*Math.sin(t*(g1.X()-g2.X())/g2.X()); },
       0,function(){ return Math.PI*7*Math.abs(g4.X());}],{
          strokeWidth:function(){return g5.Y()*3;},
          strokeOpacity:function(){return g5.Y()*0.6;}
         });
say('end graph');

</code>
</div>
<div  class="console" class="msg">
</div>
<div  id="msg" class="msg">
</div>
<button class="eval">Run Code!</button>
<ol class="results"></ol> 
</div>





 



  
  







