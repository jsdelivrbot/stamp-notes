<style type="text/css">
#tweets, #tweets1, #tweets2, #tweets3{
 background:white;
}
</style>


<form> 
<fieldset> 
<legend>Select a time range of recent HTML5 tweets<span id="found"></span></legend> 
 <input type="radio" value="5" id="t5m" name="timerange" /><label for="t5m">5 minutes</label> 
    <input type="radio" value="30" id="t30m" name="timerange" /><label for="t30m">30 minutes</label> 
    <input type="radio" value="120" id="t2h" name="timerange" /><label for="t2h">2 hours</label> 
    <input type="radio" value="all" id="tall" name="timerange" checked="checked" /><label for="tall">all time</label> 
    </fieldset> 
  </form> 
 <ol style="width:70%;background:#white;color:black" id="tweets"></ol> 
<script src="http://twitterjs.googlecode.com/svn/trunk/src/ify.js"></script> 
<script> 
var tweetEl = document.getElementById('tweets');
var db;
 
var callback = saveTweets;
 
function getTweets() {
  var script = document.createElement('script');
  script.src = 'http://search.twitter.com/search.json?q=html5 -RT&rpp=100&callback=saveTweets';
  document.body.appendChild(script);
}
 
// our Twitter API callback function
function saveTweets(tweets) {
  for (var i = 0; i < tweets.results.length; i++) {
    (function (tweet) {
      db.transaction(function (tx) {
        tx.executeSql('INSERT INTO tweets VALUES (?, ?, ?, ?)', [tweet.id, tweet.from_user, (new Date(Date.parse(tweet.created_at))).getTime() / 1000, tweet.text]); // div 1000 to get to seconds
      });      
    })(tweets.results[i]);
  }
 
  show('all');
}
 
function show(amount) {
  db.transaction(function (tx) {
    tx.executeSql('SELECT * FROM tweets' + (amount != 'all' ? ' WHERE date > strftime("%s", "now", "-' + amount + ' minutes")' : ''), [], function (tx, results) {
      var html = [];
      tweetEl.innerHTML = '';
      document.querySelector('#found').innerHTML = ' (found: ' + results.rows.length + ')';
      if (results.rows && results.rows.length) {
        for (var i = 0; i < results.rows.length; i++) {
          html.push('<li>' + ify.clean(results.rows.item(i).text) + ' [posted ' + relative_time(results.rows.item(i).date*1000) + ']</li>');
        }
        tweetEl.innerHTML = html.join('');
      }
    });
  });
}
 
function relative_time(d) {
  var date = new Date(d),
      relative_to = new Date(),
      delta = ~~((relative_to.getTime() - date.getTime()) / 1000),
      r = '';
 
  delta = delta + (relative_to.getTimezoneOffset() * 60);
 
  if (delta < 5) {
    r = 'less than 5 seconds ago';
  } else if (delta < 30) {
    r = 'half a minute ago';
  } else if (delta < 60) {
    r = 'less than a minute ago';
  } else if (delta < 120) {
    r = '1 minute ago';
  } else if (delta < (45*60)) {
    r = (~~(delta / 60)).toString() + ' minutes ago';
  } else if (delta < (2*90*60)) { // 2* because sometimes read 1 hours ago
    r = 'about 1 hour ago';
  } else if (delta < (24*60*60)) {
    r = 'about ' + (~~(delta / 3600)).toString() + ' hours ago';
  } else {
    r = date.toString();
  }
 
  return r;
}
 
[].forEach.call(document.querySelectorAll('input[type=radio]'), function (el) {
  el.onclick = function () {
    show(this.value);
  }
});
 
function setupDatabase() {
  if (!window.openDatabase) {
    tweetEl.innerHTML = '<li>Web SQL Database API is not available in this browser, please try nightly Opera, Webkit or Chrome.</li>';
    return;
  }
  db = openDatabase('tweets', '1.0', 'db of tweets', 2 * 1024 * 1024);
  db.transaction(function (tx) {
    tx.executeSql('DROP TABLE IF EXISTS tweets');
    tx.executeSql('CREATE TABLE IF NOT EXISTS tweets (id unique, screen_name, date integer, text)');
  });
  getTweets();
}
 
setupDatabase();
 
</script>                                                                                                                                                                