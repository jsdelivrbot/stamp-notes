 <!--
{{feature: .. Simplicity the art of maximizing the amount of work not done. The Agile Manifesto}}

{{keywords: CodeIgniter,PHP, CodeIgniter, File helper class}}
{{author:Dr Y Lazarides}}
{{date:8 September 2008}}
{{category: PHP, MVC, Parsers}}
{{snippet:using CodeIgniter's file_helper class}}

-->


<h2>Conditional Operator</h2>
This is the only JavaScript operator that takes three arguments and is used as a shorter form of the if statement.

The first argument takes an expression that evaluates to true or false. If the condition is true, the operator returns the value of expr1; otherwise, it returns the value of expr2.


{{plain:
condition ? expr1 : expr2
}}

<div  class="code-block console-wrap"><div class="code code-block"><code>
 var z = 23;

log(z<20? 'less than 20' : 'greater or equal to twenty')

</code>
</div>
<p id="msg1" class="msg" style="width:400px;font-size:24px;font-weight:bold;background:#fff">
</p>
<div class="console"></div>
<button class="eval">Run Code!</button>
<ol class="results"></ol> 
</div>

<hr/>

For simple cases like the above, my own recommendation is to actually __name__ the function, while debugging it makes it easier to trace and is debatable if typing __arguments.callee__ is less cumbersome than typing the function name twice. However, there are a number of useful instances where, such a call is necessary. For a more involved example see this [article](http://127.0.0.1/CodeIgniter/index.php/Blogs/stamps/jQuery/Javascript_the_new_operator ).




  
  







