
<style type="text/css">
.edit-code{font-size:12px;line-height:1.3}
</style>

<h2>forEach()</h2>

Most browsers currently support a `.forEach()` iterator, it makes code cleaner and gives it a more functional style.

\begin{codeblock}
var foo = [1, 2, 3, 4, 5];
var sum = 0;
foo.forEach(function (e,i,arr) {
   log(sum += e+arr[1],i);
});
\end{codeblock}

forEach executes the provided callback once for each element present in the array in ascending order. It is not invoked for indexes that have been deleted or elided. However, it is executed for elements that are present and have the value undefined.

callback is invoked with three arguments:

- the element value
- the element index
- the array being traversed

If a thisArg parameter is provided to forEach, it will be passed to callback when invoked, for use as its this value.  Otherwise, the value undefined will be passed for use as its this value.  The this value ultimately observable by callback is determined according to the usual rules for determining the this seen by a function.

The range of elements processed by forEach is set before the first invocation of callback. Elements that are appended to the array after the call to forEach begins will not be visited by callback. If the values of existing elements of the array are changed, the value passed to callback will be the value at the time forEach visits them; elements that are deleted before being visited are not visited.

Note : There is no way to stop or break a forEach loop. The solution is to use Array.every or Array.some. See example below.
forEach executes the callback function once for each array element; unlike every and some it, always returns the value undefined.

\begin{codeblock}
function logArrayElements(element, index, array) {
    log("a[" + index + "] = " + element);
}

// Note ellision, there is no member at 2 so it isn't visited 
[2, 5, , 9].forEach(logArrayElements);
// logs:
// a[0] = 2
// a[1] = 5
// a[3] = 9

\end{codeblock}


[photo-credit](http://photogrist.com/black-white-photography-janine-niepce/)

























http://www.allisons.org/ll/




                      